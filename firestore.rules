rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Only the user themselves or an admin can read/write their profile.
    // Allow authenticated users to create their own profile upon signup.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allows signup to create doc
      allow delete: if request.auth != null && request.auth.token.role == 'admin'; // Only admin can delete
    }

    // Blood Banks: Allow public read, admin write.
    match /bloodBanks/{bankId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Campaigns: Allow public read, admin write.
    match /campaigns/{campaignId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Blood Requests:
    // - Allow authenticated users to create requests.
    // - Allow the user who created the request or an admin to read/update/delete it.
    match /bloodRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && (resource.data.requesterUid == request.auth.uid || request.auth.token.role == 'admin');
      allow delete: if request.auth != null && (resource.data.requesterUid == request.auth.uid || request.auth.token.role == 'admin');
    }

    // Donation Records (assuming a 'donations' collection):
    // - Allow authenticated users (likely donors) to create.
    // - Allow the donor or an admin to read/update/delete.
    match /donations/{donationId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth != null && (resource.data.donorUid == request.auth.uid || request.auth.token.role == 'admin');
        allow delete: if request.auth != null && (resource.data.donorUid == request.auth.uid || request.auth.token.role == 'admin');
    }

    // Add rules for other collections as needed.
  }
}
